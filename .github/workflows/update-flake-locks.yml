name: Update Flake Locks
on:
  schedule:
    # Run weekly on Monday at 3:00 AM UTC
    - cron: '0 3 * * 1'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      host:
        description: 'Specific host to update (leave empty for all)'
        required: false
        type: string
jobs:
  # First job to determine which hosts to process
  determine-hosts:
    runs-on: ubuntu-latest
    outputs:
      hosts: ${{ steps.set-hosts.outputs.hosts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set hosts
        id: set-hosts
        run: |
          # If a specific host is provided, use it; otherwise list all hosts
          if [ -n "${{ github.event.inputs.host }}" ]; then
            echo "hosts=[${{ github.event.inputs.host }}]" >> "$GITHUB_OUTPUT"
          else
            echo "hosts=[\"drakkar\", \"huginn\", \"langhus\", \"mimir\", \"vm_database\", \"vm_management\", \"vm_target\", \"vm_test\", \"vm_tor\", \"vm_web\"]" >> "$GITHUB_OUTPUT"
          fi
  # Second job to update each host's flake lock
  update-locks:
    needs: determine-hosts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        host: ${{ fromJson(needs.determine-hosts.outputs.hosts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
      - name: Update flake.lock for ${{ matrix.host }}
        id: update
        run: |
          # Run the update-host script and capture its output
          UPDATE_OUTPUT="$(bin/ci/update-host "${{ matrix.host }}")"

          # Check if the update happened
          if echo "$UPDATE_OUTPUT" | grep -q "updated=true"; then
            {
              echo "updated=true"
              # Extract the update details (all lines except the "updated=true" line)
              UPDATE_DETAILS="$(echo "$UPDATE_OUTPUT" | grep -v "updated=")"
              echo "update_details<<EOF"
              echo "$UPDATE_DETAILS"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"
          else
            echo "updated=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Create Pull Request
        if: steps.update.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "chore(deps): update flake inputs for ${{ matrix.host }}"
          title: "chore(deps): update flake inputs for ${{ matrix.host }}"
          body: |
            ## Flake Lock Update for ${{ matrix.host }}

            This automated PR updates the flake.lock file for the `${{ matrix.host }}` host.

            ### Changes

            ${{ steps.update.outputs.update_details }}

            This update was automatically generated by the `update-flake-locks` GitHub workflow.
          branch: "flake-update/${{ matrix.host }}"
          delete-branch: true
          labels: |
            dependencies
            automated
          base: ${{ github.ref_name }}
